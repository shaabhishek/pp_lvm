# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['device', 'INDUCING_POINT_STRIDE', 'get_data']

# Cell
import numpy as np
import matplotlib.pyplot as plt

import torch
import torch.distributions as dist
import torch.nn as nn
import torch.nn.functional as F
from torch.utils.data import Dataset, DataLoader
from torch.optim import Adam

# Cell
from .simulations import get_time_from_intervals, simulate_data, TrueParameters, visualize
from .models import Encoder_h, Encoder_x, Model_z, marginalize_z, marginalize_z_paper, Decoder_h, Decoder_i, Decoder_y
from .GP import inference_X, get_covariance_matrix_from_RBFkernel_new, add_jitter_covar, plot_predictions, ExactGPModelLayer

# Cell
device = 'cuda' if torch.cuda.is_available() else 'cpu'

# Cell
INDUCING_POINT_STRIDE = 10

# Cell
def get_data(Params, visualize_data=False):
    # returns I,Y,T,X,Z,H
    I,Y,T,X,_,H = simulate_data(Params)
    data = {'I': I, 'Y': Y, 'T': T, 'X': X, 'H': H}
    if visualize_data:
        visualize(Params, X, T, I, H)
    return data